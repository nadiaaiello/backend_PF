 <header>
        <nav>
            <ul>
                <li><a href="/products">Productos</a></li>
                <li><a href="/cart">Carrito</a></li>
                <li><a href="/login">Iniciar Sesi√≥n</a></li>
                <li><a href="/profile">Perfil</a></li>
            </ul>
        </nav>
    </header>
    <h1>Login</h1>
<form id="login-form">
  <label for="email">Email:</label>
  <input type="email" id="email" name="email" required />
  <label for="password">Password:</label>
  <input type="password" id="password" name="password" required />
  <button type="button" id="toggle-password">Show Password</button>
  <button type="submit">Login</button>
</form>
<section>No tenes cuenta? <a href="/register">Registrate</a></section>

<!-- GitHub Login -->
{{!-- <div style="margin-top: 20px;">
  <p>Or login with:</p>
  <button id="github-login">Login with GitHub</button>
</div> --}}

<script>
  const togglePasswordButton = document.getElementById("toggle-password");
  const passwordInput = document.getElementById("password");
  //const githubLoginButton = document.getElementById("github-login");

  // Toggle Password Visibility
  togglePasswordButton.addEventListener("click", () => {
    const type =
      passwordInput.getAttribute("type") === "password" ? "text" : "password";
    passwordInput.setAttribute("type", type);
    togglePasswordButton.textContent =
      type === "password" ? "Show Password" : "Hide Password";
  });

  // Login Form Submission
  document.getElementById("login-form").addEventListener("submit", async (e) => {
    e.preventDefault();

    const email = document.getElementById("email").value;
    const password = document.getElementById("password").value;

    if (!validateEmail(email)) {
      alert("Please enter a valid email address.");
      return;
    }

    // Get cart from localStorage
    const localCart = JSON.parse(localStorage.getItem("cart")) || [];

    try {
      const response = await fetch("/api/users/login", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ email, password, localCart }),
      });

      const data = await response.json();

      if (response.ok) {
        // Save token to localStorage
        localStorage.setItem("token", data.token);

        // Clear localStorage cart after merging
        localStorage.removeItem("cart");

        alert("Login successful!");
        window.location.href = "/products"; // Redirect to products page
      } else {
        alert(data.error || "Login failed. Please try again.");
      }
    } catch (error) {
      console.error("Error during login:", error);
      alert("An error occurred. Please try again later.");
    }
  });

  // Redirect to GitHub login
  {{!-- githubLoginButton.addEventListener("click", () => {
    window.location.href = "/api/users/auth/github";
  }); --}}

  // Validate Email Format
  const validateEmail = (email) => {
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return emailRegex.test(email);
  }; 
</script>
